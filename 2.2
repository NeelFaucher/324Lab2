.global _start

.equ LOAD_ADDRESS, 0xFFFEC600
.equ CONTROL_ADDRESS, 0xFFFEC608
.equ INTERRUPT_STATUS, 0xFFFEC60C
.equ HEX_03, 0xFF200020
.equ HEX_45, 0xFF200030

_start:

LDR R0, =#200000

	PUSH {LR}
	BL ARM_TIM_config_ASM
	POP {LR}
	MOV R9, #0 // 1
	MOV R8, #0 // 2
	MOV R7, #0 // 4
	MOV R6, #0 // 8
	MOV R5, #0 // 16
	
	
STOP_WATCH:
	PUSH {LR}
	BL ARM_TIM_read_INT_ASM
	POP {LR}
	
	CMP R0, #1
	BLEQ ARM_TIM_clear_INT_ASM
	
	ADDEQ R9, R9, #1
	CMP R9, #10
	MOVEQ R9, #0
	
	ADDEQ R8, R8, #1
	CMP R8, #10
	MOVEQ R8, #0

	ADDEQ R7, R7, #1
	CMP R7, #10
	MOVEQ R7, #0

	ADDEQ R6, R6, #1
	CMP R6, #6
	MOVEQ R6, #0

	ADDEQ R5, R5, #1
	CMP R5, #10
	MOVEQ R5, #0

	ADDEQ R4, R4, #1
	CMP R4, #10
	MOVEQ R4, #0

	BL HEX_write_ASM_1
	BL HEX_write_ASM_2
	BL HEX_write_ASM_3
	BL HEX_write_ASM_4
	BL HEX_write_ASM_5
	BL HEX_write_ASM_6
		
	MOV R0, #0
	B STOP_WATCH

ARM_TIM_config_ASM:
	PUSH {R2, R3, R4}
	LDR R2, =LOAD_ADDRESS
	LDR R3, =CONTROL_ADDRESS

	STR R0, [R2]
	MOV R4, #0b0000011
	STRB R4, [R3]
	POP {R2, R3, R4}
	BX LR

ARM_TIM_read_INT_ASM:
	PUSH {R2, R3}
	LDR R2, =INTERRUPT_STATUS
	LDR R0, [R2]
	POP {R2, R3}
	BX LR

ARM_TIM_clear_INT_ASM:
	PUSH {R2, R3}
	LDR R2, =INTERRUPT_STATUS
	MOV R3, #0x00000001
	STR R3, [R2]

	POP {R2, R3}
	BX LR

HEX_write_ASM_1:
	PUSH {R3, R5}
	LDR R3, =HEX_03

	CMP R9, #0
	MOVEQ R5, #0x3F
		STREQB R5, [R3]
	CMP R9, #1
	MOVEQ R5, #6
		STREQB R5, [R3]
	CMP R9, #2
	MOVEQ R5, #0x5B
		STREQB R5, [R3]
	CMP R9, #3
	MOVEQ R5, #0x4F
		STREQB R5, [R3]
	CMP R9, #4
	MOVEQ R5, #0x66
		STREQB R5, [R3]
	CMP R9, #5
	MOVEQ R5, #0x6D
		STREQB R5, [R3]
	CMP R9, #6
	MOVEQ R5, #0x7D
		STREQB R5, [R3]
	CMP R9, #7
	MOVEQ R5, #0x07
		STREQB R5, [R3]
	CMP R9, #8
	MOVEQ R5, #0x7F
		STREQB R5, [R3]
	CMP R9, #9
	MOVEQ R5, #0x6F
		STREQB R5, [R3]

	POP {R3, R5}
	BX LR
	
	HEX_write_ASM_2:
	PUSH {R3, R5}
	LDR R3, =HEX_03

	CMP R8, #0
	MOVEQ R5, #0x3F
		STREQB R5, [R3, #1]
	CMP R8, #1
	MOVEQ R5, #6
		STREQB R5, [R3, #1]
	CMP R8, #2
	MOVEQ R5, #0x5B
		STREQB R5, [R3, #1]
	CMP R8, #3
	MOVEQ R5, #0x4F
		STREQB R5, [R3, #1]
	CMP R8, #4
	MOVEQ R5, #0x66
		STREQB R5, [R3, #1]
	CMP R8, #5
	MOVEQ R5, #0x6D
		STREQB R5, [R3, #1]
	CMP R8, #6
	MOVEQ R5, #0x7D
		STREQB R5, [R3, #1]
	CMP R8, #7
	MOVEQ R5, #0x07
		STREQB R5, [R3, #1]
	CMP R8, #8
	MOVEQ R5, #0x7F
		STREQB R5, [R3, #1]
	CMP R8, #9
	MOVEQ R5, #0x6F
		STREQB R5, [R3, #1]

	POP {R3, R5}
	BX LR
	
	HEX_write_ASM_3:
	PUSH {R3, R5}
	LDR R3, =HEX_03

	CMP R7, #0
	MOVEQ R5, #0x3F
		STREQB R5, [R3, #2]
		CMP R7, #1
	MOVEQ R5, #6
		STREQB R5, [R3, #1]
	CMP R7, #2
	MOVEQ R5, #6
		STREQB R5, [R3, #2]
	CMP R7, #2
	MOVEQ R5, #0x5B
		STREQB R5, [R3, #2]
	CMP R7, #3
	MOVEQ R5, #0x4F
		STREQB R5, [R3, #2]
	CMP R7, #4
	MOVEQ R5, #0x66
		STREQB R5, [R3, #2]
	CMP R7, #5
	MOVEQ R5, #0x6D
		STREQB R5, [R3, #2]
	CMP R7, #6
	MOVEQ R5, #0x7D
		STREQB R5, [R3, #2]
	CMP R7, #7
	MOVEQ R5, #0x07
		STREQB R5, [R3, #2]
	CMP R7, #8
	MOVEQ R5, #0x7F
		STREQB R5, [R3, #2]
	CMP R7, #9
	MOVEQ R5, #0x6F
		STREQB R5, [R3, #2]

	POP {R3, R5}
	BX LR
	
HEX_write_ASM_4:
	PUSH {R3, R5}
	LDR R3, =HEX_03

	CMP R6, #0
	MOVEQ R5, #0x3F
		STREQB R5, [R3, #3]
	CMP R6, #1
	MOVEQ R5, #6
		STREQB R5, [R3, #3]
	CMP R6, #2
	MOVEQ R5, #0x5B
		STREQB R5, [R3, #3]
	CMP R6, #3
	MOVEQ R5, #0x4F
		STREQB R5, [R3, #3]
	CMP R6, #4
	MOVEQ R5, #0x66
		STREQB R5, [R3, #3]
	CMP R6, #5
	MOVEQ R5, #0x6D
		STREQB R5, [R3, #3]
	CMP R6, #6
	MOVEQ R5, #0x7D
		STREQB R5, [R3, #3]
	
	POP {R3, R5}
	BX LR
	
HEX_write_ASM_5:
	PUSH {R3, R5}
	LDR R3, =HEX_45

	CMP R5, #0
	MOVEQ R5, #0x3F
		STREQB R5, [R3]
	CMP R5, #1
	MOVEQ R5, #6
		STREQB R5, [R3]
	CMP R5, #2
	MOVEQ R5, #0x5B
		STREQB R5, [R3]
	CMP R5, #3
	MOVEQ R5, #0x4F
		STREQB R5, [R3]
	CMP R5, #4
	MOVEQ R5, #0x66
		STREQB R5, [R3]
	CMP R5, #5
	MOVEQ R5, #0x6D
		STREQB R5, [R3]
	CMP R5, #6
	MOVEQ R5, #0x7D
		STREQB R5, [R3]
	CMP R5, #7
	MOVEQ R5, #0x07
		STREQB R5, [R3]
	CMP R5, #8
	MOVEQ R5, #0x7F
		STREQB R5, [R3]
	CMP R5, #9
	MOVEQ R5, #0x6F
		STREQB R5, [R3]

	POP {R3, R5}
	BX LR
	
HEX_write_ASM_6:
	PUSH {R3, R5}
	LDR R3, =HEX_45

	CMP R4, #0
	MOVEQ R5, #0x3F
		STREQB R5, [R3, #1]
	CMP R4, #1
	MOVEQ R5, #6
		STREQB R5, [R3, #1]
	CMP R4, #2
	MOVEQ R5, #0x5B
		STREQB R5, [R3, #1]
	CMP R4, #3
	MOVEQ R5, #0x4F
		STREQB R5, [R3, #1]
	CMP R4, #4
	MOVEQ R5, #0x66
		STREQB R5, [R3, #1]
	CMP R4, #5
	MOVEQ R5, #0x6D
		STREQB R5, [R3, #1]
	CMP R4, #6
	MOVEQ R5, #0x7D
		STREQB R5, [R3, #1]
	CMP R4, #7
	MOVEQ R5, #0x07
		STREQB R5, [R3, #1]
	CMP R4, #8
	MOVEQ R5, #0x7F
		STREQB R5, [R3, #1]
	CMP R4, #9
	MOVEQ R5, #0x6F
		STREQB R5, [R3, #1]

	POP {R3, R5}
	BX LR

	
END:
	B END
